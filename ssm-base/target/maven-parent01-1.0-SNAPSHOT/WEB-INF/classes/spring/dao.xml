<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
    ">

	<context:property-placeholder location="jdbc.properties"/>

<!--2.配置数据源	-->
<bean
		id="dataSource"
		init-method="init" destroy-method="close"
		class="com.alibaba.druid.pool.DruidDataSource">
	<property name="driverClassName" value="${my.driver}"/>
	<property name="url"  value="{my.url}"/>
	<property name="username"  value="${my.username}"/>
	<property name="password"  value="${my.password}"/>

	<!-- 配置初始化大小、最小、最大 -->
	<property name="initialSize" value="1" />
	<property name="minIdle" value="1" />
	<property name="maxActive" value="10" />

	<!-- 配置获取连接等待超时的时间 -->
	<property name="maxWait" value="10000" />

	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<property name="timeBetweenEvictionRunsMillis" value="60000" />

	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property name="minEvictableIdleTimeMillis" value="300000" />

	<property name="testWhileIdle" value="true" />

	<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
	<property name="testOnBorrow" value="true" />
	<property name="testOnReturn" value="false" />

	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	<property name="poolPreparedStatements" value="true" />
	<property name="maxPoolPreparedStatementPerConnectionSize"
			  value="20" />

	<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->

	<property name="defaultAutoCommit" value="true" />

	<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->

</bean>
<!--3.SqlSession配置	(关于mybatis)-->
	<bean
			id="sqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis/batis.xml" />
<!--		<property name="typeAliasesPackage" value="com.study.bean" />-->
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/complex*.xml" />
	</bean>
	<!--1.dao配置文件	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactory" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.study.dao" />
	</bean>

<!--4.配置事务	-->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
	</bean>














	<tx:annotation-driven transaction-manager="transactionManager"/>
<!--	<context:component-scan base-package="com.study.transaction"></context:component-scan>-->

</beans>